{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","filterReducer","initialTodos","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoItem","selectedTodo","dispatch","removeCurrentTodo","currentTodoActions","className","id","completed","title","onClick","classNames","TodoList","useState","filterError","setFilterError","todosToDisplay","setTodosToDisplay","checkForMatchingCriteria","filtredTodos","length","useEffect","todosToFilter","toLocaleLowerCase","includes","filterTodos","map","TodoFilter","setQuery","newQuery","filterActions","console","log","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","loading","setLoading","user","setUser","userId","response","finally","href","email","name","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea9886b5.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","/* eslint-disable max-len */\nimport { Status } from '../types/Status';\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\ntype ChangeStatusAction = {\n  type: 'filter/STATUS-CHANGE',\n  payload: Status,\n};\n\ntype ChangeQueryAction = {\n  type: 'filter/QUERY-CHANGE',\n  payload: string,\n};\n\ntype Action = ChangeQueryAction | ChangeStatusAction;\n\nconst initialState: State = {\n  query: '',\n  status: 'all',\n};\n\nconst changeStatus = (status: Status): ChangeStatusAction => ({ type: 'filter/STATUS-CHANGE', payload: status });\n\nconst changeQuery = (query: string): ChangeQueryAction => ({ type: 'filter/QUERY-CHANGE', payload: query });\n\nexport const actions = { changeStatus, changeQuery };\n\nconst filterReducer = (state = initialState, action: Action): State => {\n  switch (action.type) {\n    case 'filter/QUERY-CHANGE':\n      return {\n        query: action.payload,\n        status: state.status,\n      };\n\n    case 'filter/STATUS-CHANGE':\n      return {\n        query: state.query,\n        status: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst initialTodos: Todo[] = [];\n\ntype SetAction = {\n  type: 'todos/SET',\n  payload: Todo[]\n};\n\ntype Action = SetAction;\n\nconst set = (payload: Todo[]): Action => ({ type: 'todos/SET', payload });\n\nexport const actions = { set };\n\nconst todosReducer = (todos = initialTodos, action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const dispatch = useAppDispatch();\n\n  const setCurrentTodo = (newCurrentTodo: Todo) => dispatch(currentTodoActions.setTodo(newCurrentTodo));\n  const removeCurrentTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  return (\n    <tr data-cy=\"todo\" key={todo.id}>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n\n      <td className=\"is-vcentered is-expanded\">\n        <p className=\"has-text-danger\">{todo.title}</p>\n      </td>\n\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            if (selectedTodo === todo) {\n              removeCurrentTodo();\n\n              return;\n            }\n\n            removeCurrentTodo();\n            setCurrentTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far fa-eye-slash', {\n              'fa-eye': selectedTodo !== todo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { useAppSelector } from '../../app/hooks';\n\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const [filterError, setFilterError] = useState(false);\n  const [todosToDisplay, setTodosToDisplay] = useState<Todo[]>(todos);\n\n  const checkForMatchingCriteria = (filtredTodos: Todo[]) => {\n    if (!filtredTodos.length) {\n      setFilterError(true);\n\n      return;\n    }\n\n    setFilterError(false);\n  };\n\n  const filterTodos = (todosToFilter: Todo[]) => {\n    let filtredTodos = todosToFilter;\n\n    filtredTodos = filtredTodos.filter((todo: Todo) => {\n      return todo.title.toLocaleLowerCase().includes(query.toLocaleLowerCase());\n    });\n\n    checkForMatchingCriteria(filtredTodos);\n\n    filtredTodos = filtredTodos.filter((todo: Todo) => {\n      switch (status as Status) {\n        case 'all':\n          return true;\n\n        case 'completed':\n          return todo.completed;\n\n        case 'active':\n          return !todo.completed;\n\n        default:\n          return true;\n      }\n    });\n\n    checkForMatchingCriteria(filtredTodos);\n\n    setTodosToDisplay(filtredTodos);\n  };\n\n  useEffect(() => {\n    filterTodos(todos);\n  }, [todos, query, status]);\n\n  return (\n    <>\n      {filterError && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!filterError && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todosToDisplay.map((todo) => (\n              <TodoItem todo={todo} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { query } = useAppSelector(state => state.filter);\n\n  const setQuery = (newQuery: string) => dispatch(filterActions.changeQuery(newQuery));\n  const setStatus = (status: Status) => dispatch(filterActions.changeStatus(status));\n\n  console.log(useAppSelector(state => state.filter));\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value as Status)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  const removeSelectedTodo = () => dispatch(currentTodoActions.removeTodo());\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(selectedTodo?.userId || -1)\n      .then((response) => {\n        setUser(response);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && <Loader />}\n\n      {!loading && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                removeSelectedTodo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{selectedTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* For not completed */}\n              {!selectedTodo?.completed && <strong className=\"has-text-danger\">Planned</strong>}\n\n              {/* For completed */}\n              {selectedTodo?.completed && <strong className=\"has-text-success\">Done</strong>}\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { Todo } from './types/Todo';\nimport { actions } from './features/todos';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const [loading, setLoading] = useState(false);\n\n  const setTodos = (todos: Todo[]) => dispatch(actions.set(todos));\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}